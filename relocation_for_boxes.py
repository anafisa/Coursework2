from route_time_calc import box_time
from import1 import wave_workers, floors


floor1 = [[106049, 144361, 314050, 177429, 107710, 143336], [197565, 192346, 186069, 256621, 114029, 293997], [278586, 334921, 174030, 184136, 328170, 188238], [109388, 204830, 212364, 291662, 186341, 161573], [248655, 259138, 314425, 340360, 324269, 115887], [280164, 182373, 220012, 350689, 195827, 276372], [157718, 133045, 189122, 203790, 197160, 278237], [243201, 223144, 290779, 166716, 242913, 173718], [322463, 230248, 169803, 211483, 145584, 218447], [254072, 287780, 132185, 173844, 113300, 290159], [353280, 283631, 317039, 166868, 199417, 238560], [208315, 352206, 252874, 249968, 164014, 181711], [281655, 292905, 204495, 362029, 338276, 278969], [374210, 232453, 167106, 320257, 240819, 220016], [374274, 182251, 229635, 198806, 198527, 224391], [337523, 297254, 282353, 104934, 281395, 283619], [176480, 179599, 288911, 328562, 236216, 267788], [394201, 120418, 348453, 294481, 291374, 124015], [206907, 171837, 110876, 374226, 152087, 255545], [118747, 213734, 205350, 134967, 124333, 117539], [301101, 317947, 179544, 120540, 166461, 274156], [292254, 171163, 247309, 156219, 185949, 184384], [349846, 222939, 340996, 181744, 181890, 394367], [212034, 120667, 297787, 339889, 212369, 187337], [215745, 146092, 233363, 230902, 183826, 260654], [335244, 252508, 361486, 194833, 203656, 247528], [276418, 240979, 374273, 112333, 258934, 294400], [160429, 214919, 194461, 326952, 180602, 355223], [241830, 294793, 393598, 170160, 166184, 179962], [325558, 148663, 181714, 247719, 177527, 144364], [142793, 183467, 206791, 279138, 177006, 211879], [112480, 338567, 339428, 229742, 247607, 282572], [245654, 314215, 333440, 172876, 293292, 123417], [225615, 367541, 294292, 245535, 274856, 232228], [233093, 188183, 234044, 277707, 188849, 180869], [113176, 334018, 207024, 297944, 337077, 232452], [213726, 351664, 209854, 212755], [346548, 315282]]
floor2 = [[120678, 201501, 339355, 150456, 290739, 183300], [217368, 340367, 311169, 218324, 185383, 163160], [228604, 245697, 165905, 240427, 119777, 284134], [331990, 263119, 247222, 311087, 159729, 277631], [355893, 340811, 338420, 118125, 230126, 324495], [255890, 159287, 242780, 196003, 159825, 223102], [187530, 144660, 296938, 147329, 171317, 166265], [274707, 351023, 157933, 185380, 248411, 335698], [206786, 148848, 183195, 155356, 123080, 306122], [213054, 211024, 134492, 247038, 228893, 144811], [282825, 157790, 277763, 236913, 248611, 159289], [222130, 183788, 334704, 221725, 197395, 196013], [314720, 350283, 248287, 276625, 376038, 217347], [207053, 284662, 333123, 346866, 216222, 290275], [159064, 252210, 279999, 184785, 314496, 230133], [224951, 131248, 126189, 174666, 155751, 241099], [255847, 277355, 338618, 201666, 174351, 254322], [176816, 126114, 175046, 191879, 192196, 228589], [325649, 337011, 279100, 311721, 327618, 180043], [202518, 123928, 182936, 202359, 339240, 256314], [224120, 120906, 188522, 280126, 181187, 159571], [222401, 113869, 186943, 289178, 350360, 326959], [205407, 339847, 169896, 218747, 133860, 205864], [174749, 134717, 184586, 105657, 206324, 156174], [296743, 219778, 347531, 293048, 172927, 285075], [248068, 185995, 108145, 266254, 155841, 339935], [180468, 386899, 280127, 144831, 279753, 156100], [314372, 110099, 284136, 208931, 239533, 248609], [215983, 180322, 170355, 295971, 285667, 188824], [162099, 337249, 176822, 205608, 284318, 234364], [276407, 191826, 294416, 339262, 255717, 245377], [279751, 130450, 223351, 184941, 149846, 226329], [230778, 116938, 171515, 174568, 129741, 184953], [176786, 130489, 123776, 109353, 146393, 249395], [219975, 361277, 125413, 283310, 177145, 161839], [182083, 161631, 185494, 232176, 164225, 203984], [210080, 171043, 225413, 285971, 280738], [183618, 213991], [119916]]
floor3 = [[246051, 210406, 111021, 241950, 136522, 184141], [233719, 351509, 270584, 145539, 150924, 254553], [375886, 229499, 130102, 141392, 113507, 112146], [283734, 201556, 113895, 280824, 190058, 288995], [170472, 264697, 167399, 269069, 158477, 193557], [269135, 353819, 386562, 303066, 263054, 245237], [177859, 258989, 218349, 201352, 190690, 332194], [258839, 189393, 275813, 340274, 155865, 292733], [276745, 338564, 143855, 298671, 332330, 257626], [164441, 319000, 247964, 227196, 305962, 204380], [168802, 302797, 274111, 164849, 220830, 316303], [350455, 282497, 147904, 244515, 132732, 170530], [211087, 197022, 259927, 192588, 266807, 294253], [195121, 349930, 187801, 217071, 205342, 209509], [286669, 333200, 278215, 173081, 117160, 264650], [248183, 346768, 348851, 334960, 110870, 348236], [131249, 361586, 220178, 266607, 190127, 226187], [218599, 144984, 193308, 184827, 284297, 166142], [239170, 152263, 352620, 352035, 294722, 319316], [257246, 317913, 212323, 186010, 211052, 325603], [173395, 291065, 223073, 303273, 216395, 213069], [123391, 174091, 203411, 160260, 129745, 349902], [205893, 244528, 162783, 188020, 222245, 148892], [198843, 181810, 339088, 148352, 114365, 158327], [372684, 353421, 218029, 201818, 200242, 108011], [127276, 178033, 217263, 123184, 223930, 149842], [296278, 216300, 135416, 107337, 322742, 337663], [150628, 299947, 173740, 233505, 181745, 312998], [239084, 179568, 189370, 273562, 127650, 174298], [264412, 185306, 387300, 119511, 256428, 150558], [228275, 120190, 143266, 202978, 238436, 134775], [374007, 153770, 315855, 181231, 223552, 343085], [142709, 265938, 172993, 179828, 222627, 234449], [306222, 213568, 404324, 241689, 331551, 139380], [172514, 212348, 350665, 355237], [240719, 303239], [260032]]
floor4 = [[322501, 385742, 263947, 165185, 159801, 158676], [371655, 286000, 343340, 125199, 362232, 287624], [165046, 356162, 238251, 322069, 355011, 271874], [362083, 127294, 247471, 250593, 294523, 119310], [193906, 249569, 355116, 342612, 311642, 176631], [283941, 150783, 318642, 138522, 283903, 172598], [295945, 319681, 227608, 217364, 342657, 403385], [233096, 286734, 241844, 335413, 192668, 162619], [126336, 153109, 150455, 216036, 166840, 387194], [123121, 342687, 194121, 362253, 353555, 281958], [341146, 340840, 129245, 386667, 346566, 233812], [262980, 314393, 319793, 288553, 258589, 115548], [190007, 347125, 371989, 280879, 356328, 286368], [134594, 145079, 193384, 287258, 183187, 238173], [286058, 135407, 235366, 239414, 265469, 323080], [224881, 291564, 263557, 261685, 167995, 262648], [313181, 161732, 337464, 139750, 210995, 365823], [361446, 371664, 124456, 111802, 258382, 304601], [318574, 133881, 255017, 199171, 124954, 295400], [108960, 122169, 254485, 310713, 272164, 320240], [154523, 403939, 128523, 247952, 254976, 268759], [167358, 355965, 259471, 184763, 318017, 333549], [145609, 116002, 198396, 319563, 372705, 286282], [124660, 311354, 317149], [322333, 221104]]


def time(floor):
    answ = []
    for i in floor:
        t = 0
        for j in i:
            t += box_time[j]
        answ.append(t)
    return answ


tt1 = time(floor1)
tt2 = time(floor2)
tt3 = time(floor3)
tt4 = time(floor4)

time_lst = [tt1, tt2, tt3, tt4]


def ordering1(n, time_list):
    """
    Функция, которая по распределению рабочих по этажам,формирует пик-рейсы.
    n - кол-во рабочих, работающих в определенную волну на определенном этаже по новому распределению
    time_list -  список времен, затраченных на новые пик рейсы
    """
    new_time = [0] * n  # время, полученное с учетом нового распределения пик-рейсов, изначально список заполнен нулями
    t = sorted(time_list, reverse=True)

    while t:  # пока есть нераспределенные пик-рейсы
        for i in range(0, len(new_time)):
            if t:
                ind = new_time.index(min(new_time))
                new_time[ind] += t[0]
                t.remove(t[0])
            else:
                break
    return max(new_time)


def order(wave, time):

    workers = wave_workers[wave]
    k = workers//2
    tt = [[], [], [], []]
    res = []

    for i in range(1, k):
        for j in range(4):
            t = time[j]
            tt[j].append(ordering1(i, t))

    for i in range(len(tt[0])):
        for j in range(len(tt[1])):
            for g in range(len(tt[2])):
                for k in range(len(tt[3])):
                    if i+j+g+k+4 == workers:
                        res.append(max(tt[0][i], tt[1][j], tt[2][g], tt[3][k]))
    return min(res)



print(order(25472, time_lst))



